random.seed=1043
run.name=SAFS_NEAT_RARS_10_90
run.reset=true
file.name=SAFS_NEAT_RARS_10_90_1043

############
# learner 
############
learner.class=mil.af.rl.anji.learner.NEAT_LearnerPFS
learner.problem.class=mil.af.rl.problem.rars.SimpleRars
learner.use_problem_set=true
learner.problem_set_size=1
learner.random_problem_set=false
learner.attempts=1
learner.problem.maxsteps=3000
learner.reversion_window=10
learner.iterations=300
learner.problem.random=5745

############
# RARS 
############
rars.args.track=fiorano
rars.args.trackPath=tracks
rars.features.relevant=9
rars.features.redundant=0
rars.features.irrelevant=90
rars.feature.type=mil.af.rl.problem.rars.SimpleRars$JAAMASSensors
rars.feature.type.storedpath=RARS_transitions

#############
# SAFS
#############
container.class=mil.af.rl.predictive.EagerChromosomeSampleContainer
container.max_samples=75000
container.eager.base.class=mil.af.rl.predictive.FailureSeparatingSampleContainer
container.eager.temp.class=mil.af.rl.predictive.FailureSeparatingSampleContainer
container.eager.k=5
selector.class=mil.af.rl.predictive.IdentitySampleSelector
subspace_identification.class=mil.af.rl.safs.DiscMISubspaceIdentifier
subspace_identification.dmi.sample_relationship=DELTA_STATE_ACTION
subspace.min_samples=50000
subspace.features=100
subspace.actions=2
subspace.discretize.predictors.bins=10
subspace.discretize.response.bins=10
subspace_identification.dmi.strategy=mil.af.rl.safs.BestFeatureCriteria
stagnation.class=mil.af.rl.predictive.SlidingWindowStagnation
stagnation.sliding.window.1=10
stagnation.sliding.factor.1=1.2
stagnation.class.2=mil.af.rl.predictive.TrendStagnation
stagnation.trend.window.2=10
stagnation.trend.threshold.2=0.001
progressive_learner.class=mil.af.rl.anji.learner.Evolver

###########
# evolution
###########
num.generations=300
popul.size=100
topology.mutation.classic=false
add.connection.mutation.rate=0.0
add.connection.class=mil.af.rl.anji.AddConnectionMutationOperatorNoInput
remove.connection.mutation.rate=0.0
remove.connection.max.weight=100
add.neuron.mutation.rate=0.0
prune.mutation.rate=1.0
weight.mutation.rate=0.75
weight.mutation.std.dev=.25
weight.max=1.0
weight.min=-1.0
survival.rate=0.2
selector.elitism=true
selector.roulette=false
selector.elitism.min.specie.size=1

############		
# speciation
############
chrom.compat.excess.coeff=1.0
chrom.compat.disjoint.coeff=1.0
chrom.compat.common.coeff=0.04
speciation.threshold=0.5

##################
# fitness function
##################
# with velocities
stimulus.size=100
response.size=2
simul.actions=2
fitness_function.class=mil.af.rl.anji.learner.ConcurrentFitnessFunction
fitness.activator_transcriber.class=com.anji.integration.ActivatorTranscriber
fitness.function.adjust.for.network.size.factor=0
fitness.threshold=100000
fitness.numThreads=9

####################
# sigmoid activation
####################
initial.topology.activation=sigmoid

##############
# network arch
##############
initial.topology.fully.connected=true
initial.topology.num.hidden.neurons=0
initial.topology.activation.input=linear
initial.topology.activation.output=sigmoid
recurrent=disallowed
recurrent.cycles=1
ann.type=anji

#############
# persistence
#############
persistence.class=mil.af.rl.anji.FilePersistence
persistence.base.dir=Output/SAFS_NEAT_RARS/10_90
persist.all=false
persist.champions=true
persist.last=false
presentation.dir=Output/SAFS_NEAT_RARS/10_90

#########
# logging
#########
log4j.rootLogger=INFO, A1
log4j.appender.A1=org.apache.log4j.ConsoleAppender
#log4j.appender.A1=org.apache.log4j.FileAppender
#log4j.appender.A1=org.apache.log4j.RollingFileAppender
log4j.appender.A1.File=./db/log.txt
#log4j.appender.A1.MaxFileSize=10MB
#log4j.appender.A1.MaxBackupIndex=20
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
#log4j.appender.A1.layout.ConversionPattern=%-4r %-5p  %m - [%t] %c %x%n
log4j.appender.A1.layout.ConversionPattern=%-5p %m%x%n
